{
  "version": 3,
  "sources": [
    "../../node_modules/browser-pack/_prelude.js",
    "../../src/js/common.js",
    "../../src/js/module/BreadcrumbDefaultSet.js",
    "../../src/js/module/MobileNavigation.js"
  ],
  "names": [],
  "mappings": "AAAA;qFCAA,GAAA,uBAAA,QAAA,sGACA,kBAAA,QAAA,0FAGM,WAAN,kBAEA,QAAA,iBAAA,WAAoC,WAElC,GAAI,oBAAJ,QAGA,GAAI,wBAAJ;;;obCXI,kBAAN,wBAMM,gCAIJ,QAAA,KAAc,gBAAA,KAAA,GACZ,KAAA,6EAOA,KAAA,eAAsB,SAAA,cAAtB,mBACA,KAAA,eAAA,WAAA,6BAIW;;;obCtBT,aAAN,SACM,iBAAN,aACM,gBAAN,YACM,mBAAN,yBAMM,4BAIJ,QAAA,KAAc,gBAAA,KAAA,GACZ,KAAA,6EAUA,QAAA,GAAA,GACE,EAAA,iBALY,GAAA,GAAA,IACd,MAAA,eAAsB,SAAA,cAAtB,oBAQA,KAAA,eAAA,iBAAA,aAAmD,WAC7C,EAAA,eAAJ,SACE,SAAA,iBAAA,iBAAA,GACE,SAAS,IAEX,SAAA,iBAAA,gBAAA,GACE,SAAS,MAGX,SAAA,oBAAA,iBAAA,GACE,SAAS,IAEX,SAAA,oBAAA,gBAAA,GACE,SAAS,gCAOJ",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import BreadcrumbDefaultSet from './module/BreadcrumbDefaultSet'\nimport MobileNavigation from './module/MobileNavigation'\n\n// 定数\nconst LOAD_EVENT = 'DOMContentLoaded'\n\nwindow.addEventListener(LOAD_EVENT, () => {\n  // SP版ナビゲーションオープン／クローズ時の処理\n  new MobileNavigation()\n\n  // パンくずリストのスクロール位置を右端にセット\n  new BreadcrumbDefaultSet()\n})\n",
    "const TEXT_TARGET_CLASS = '.js-breadcrumb-target'\n\n/**\n * @class BreadcrumbDefaultSet\n * @desc パンくずリストのスクロール位置を右端にセット\n */\nclass BreadcrumbDefaultSet {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.scrollDefault()\n  }\n\n  /**\n   * @desc パンくずリストのスクロール位置を右端にセット\n   */\n  scrollDefault() {\n    this.targetElements = document.querySelector(TEXT_TARGET_CLASS)\n    this.targetElements.scrollLeft = 10000\n  }\n}\n\nexport default BreadcrumbDefaultSet\n",
    "// 定数\nconst CHANGE_EVENT = 'change'\nconst MOUSEWHEEL_EVENT = 'mousewheel'\nconst TOUCHMOVE_EVENT = 'touchmove'\nconst TEXT_TRIGGER_CLASS = '.js-navigation-trigger'\n\n/**\n * @class MobileNavigation\n * @desc SP版ナビゲーションオープン／クローズ時の処理\n */\nclass MobileNavigation {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.scrollControl()\n  }\n\n  /**\n   * @desc SP時ナビゲーションが開いた状態にスクロールを禁止する\n   */\n  scrollControl() {\n    this.triggerElement = document.querySelector(TEXT_TRIGGER_CLASS)\n\n    // 関数の初期セット\n    function scrollHandler(event) {\n      event.preventDefault()\n    }\n\n    // checkboxをトリガーにスクロールを制御\n    this.triggerElement.addEventListener(CHANGE_EVENT, () => {\n      if (this.triggerElement.checked) {\n        document.addEventListener(MOUSEWHEEL_EVENT, scrollHandler, {\n          passive: false,\n        })\n        document.addEventListener(TOUCHMOVE_EVENT, scrollHandler, {\n          passive: false,\n        })\n      } else {\n        document.removeEventListener(MOUSEWHEEL_EVENT, scrollHandler, {\n          passive: false,\n        })\n        document.removeEventListener(TOUCHMOVE_EVENT, scrollHandler, {\n          passive: false,\n        })\n      }\n    })\n  }\n}\n\nexport default MobileNavigation\n"
  ]
}