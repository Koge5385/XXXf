{
  "version": 3,
  "sources": [
    "../../../node_modules/browser-pack/_prelude.js",
    "../../../src/js/module/ActivateSubmit.js",
    "../../../src/js/pages/contact.js"
  ],
  "names": [
    "r",
    "e",
    "n",
    "t",
    "o",
    "i",
    "f",
    "c",
    "require",
    "u",
    "a",
    "Error",
    "code",
    "p",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "BLUR_EVENT",
    "CHANGE_EVENT",
    "SUBMIT_CLASS",
    "CHECK_EMPTY_CLASS",
    "CHECK_CHECKED_CLASS",
    "CHECK_MAIL_CLASS",
    "ERROR_CLASS",
    "VALIDATE_FORMAT",
    "ActivateSubmit",
    "_classCallCheck",
    "this",
    "activeSubmit",
    "_createClass",
    "key",
    "value",
    "document",
    "querySelectorAll",
    "Array",
    "prototype",
    "slice",
    "convertNode",
    "forEach",
    "s",
    "addEventListener",
    "checkEmpty",
    "classList",
    "add",
    "remove",
    "filter",
    "checkResult",
    "empty",
    "hasCheck",
    "checked",
    "checkbox",
    "firstInput",
    "secondInput",
    "test",
    "confirmValidate",
    "mail",
    "querySelector",
    "isValueEmpty",
    "isChecked",
    "mailValidate",
    "Object",
    "keys",
    "defineProperty",
    "get",
    "set",
    "disabled",
    "default",
    "_ActivateSubmit",
    "_ActivateSubmit2",
    "_interopRequireDefault",
    "LOAD_EVENT",
    "window"
  ],
  "mappings": "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",
  "file": "contact.js",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "// 定数 -> イベント\nconst BLUR_EVENT = 'blur'\nconst CHANGE_EVENT = 'change'\n\n// 定数 -> 対象のクラス\nconst SUBMIT_CLASS = '.js-formSubmit-target'\nconst CHECK_EMPTY_CLASS = '.js-valueEmptyCheck-target'\nconst CHECK_CHECKED_CLASS = '.js-hasChecked-target'\nconst CHECK_MAIL_CLASS = '.js-mailValidation-target'\nconst ERROR_CLASS = 'is-error'\n\n// 定数 -> バリデーションフォーマット {半角英数字}@{半角英数字}\nconst VALIDATE_FORMAT = /^(?:(?:(?:(?:[a-zA-Z0-9_!#\\$\\%&'*+\\/=?\\^`{}~|\\-]+)(?:\\.(?:[a-zA-Z0-9_!#\\$\\%&'*+\\/=?\\^`{}~|\\-]+))*)|(?:\"(?:\\\\[^\\r\\n]|[^\\\\\"])*\")))\\@(?:(?:(?:(?:[a-zA-Z0-9_!#\\$\\%&'*+\\/=?\\^`{}~|\\-]+)(?:\\.(?:[a-zA-Z0-9_!#\\$\\%&'*+\\/=?\\^`{}~|\\-]+))*)|(?:\\[(?:\\\\\\S|[\\x21-\\x5a\\x5e-\\x7e])*\\])))$/\n\n/**\n * @class ActivateSubmit\n * @desc submitボタンをアクティブにする判定\n */\nclass ActivateSubmit {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.activeSubmit()\n  }\n\n  /**\n   * @desc 対象のNodeListをArrayに変換して返却（IE対応）\n   * @param {String} className 対象のクラス名\n   */\n  convertNode(className) {\n    const targetNode = document.querySelectorAll(className)\n    return Array.prototype.slice.call(targetNode,0)\n  }\n\n  /**\n   * @desc 値が空の場合にis-errorのクラスを付与\n   */\n  isValueEmpty() {\n    const targetArray = this.convertNode(CHECK_EMPTY_CLASS)\n    const checkList = new Array(targetArray.length)\n    targetArray.forEach((elem, i) => {\n      elem.addEventListener(BLUR_EVENT, () => {\n        this.checkEmpty(elem, checkList, i)\n      })\n    })\n  }\n\n  /**\n   * @desc 値が空の要素であるか判定する\n   * @param {Object} element 対象の要素\n   * @param {Array} list チェック状態を書き込む配列\n   * @param {Number} index 処理番号\n   */\n  checkEmpty(element, list, index) {\n    if (element.value === '') {\n      element.classList.add(ERROR_CLASS)\n      list[index] = false\n    }\n    if (element.value !== '') {\n      element.classList.remove(ERROR_CLASS)\n      list[index] = true\n    }\n    list.filter(x => x === true).length !== list.length\n      ? this.checkResult.empty = false\n      : this.checkResult.empty = true\n  }\n\n  /**\n   * @desc checkedの場合にis-errorのクラスを付与\n   */\n  isChecked() {\n    const targetArray = this.convertNode(CHECK_CHECKED_CLASS)\n    const checkList = new Array(targetArray.length)\n    targetArray.forEach((elem, i) => {\n      elem.addEventListener(CHANGE_EVENT, () => {\n        this.hasCheck(elem, checkList, i)\n      })\n    })\n  }\n\n  /**\n   * @desc チェックが入っているか判定する\n   * @param {Object} element 対象の要素\n   * @param {Array} list チェック状態を書き込む配列\n   * @param {Number} index 処理番号\n   */\n  hasCheck(element, list, index) {\n    if (!element.checked) {\n      element.classList.add(ERROR_CLASS)\n      list[index] = false\n    }\n    if (element.checked) {\n      element.classList.remove(ERROR_CLASS)\n      list[index] = true\n    }\n    list.filter(x => x === true).length !== list.length\n      ? this.checkResult.checkbox = false\n      : this.checkResult.checkbox = true\n  }\n\n  /**\n   * @desc 1つ目のメールアドレスをフォーマットを参照して検証\n   */\n  mailValidate() {\n    const targetArray = this.convertNode(CHECK_MAIL_CLASS)\n    this.firstInput = targetArray[0]\n    this.secondInput = targetArray[1]\n\n    this.firstInput.addEventListener(BLUR_EVENT, () => {\n      if (!VALIDATE_FORMAT.test(this.firstInput.value)) this.firstInput.classList.add(ERROR_CLASS)\n      if (VALIDATE_FORMAT.test(this.firstInput.value)) {\n        this.firstInput.classList.remove(ERROR_CLASS)\n        this.confirmValidate()\n      }\n      this.secondInput.value !== this.firstInput.value\n        ? this.secondInput.classList.add(ERROR_CLASS)\n        : this.secondInput.classList.remove(ERROR_CLASS)\n    })\n  }\n\n  /**\n   * @desc 2つ目のメールアドレスを1つ目同様に検証し、1つ目と一致するか検証\n   */\n  confirmValidate() {\n    this.secondInput.addEventListener(BLUR_EVENT, () => {\n      if (!VALIDATE_FORMAT.test(this.secondInput.value) || this.secondInput.value !== this.firstInput.value) {\n        this.secondInput.classList.add(ERROR_CLASS)\n        this.checkResult.mail = false\n      }\n      if (VALIDATE_FORMAT.test(this.secondInput.value) && this.secondInput.value === this.firstInput.value) {\n        this.secondInput.classList.remove(ERROR_CLASS)\n        this.checkResult.mail = true\n      }\n    })\n  }\n\n  /**\n   * @desc checkを通過したときにsubmitをactiveにする\n   */\n  activeSubmit() {\n    const targetSubmit = document.querySelector(SUBMIT_CLASS)\n\n    // アクティブ判定に必要なオブジェクトを作成（全てtrueだと活性化する）\n    this.checkResult = { 'empty': false, 'checkbox': false, 'mail': false }\n\n    // それぞれのチェック処理を走らせる\n    this.isValueEmpty()\n    this.isChecked()\n    this.mailValidate()\n\n    const checkObject = this.checkResult\n    Object.keys(checkObject).forEach(key => {\n      Object.defineProperty(checkObject, key, {\n        get: () => this[key],\n        set: (newValue) => {\n          this[key] = newValue\n          checkObject.empty === true && checkObject.checkbox === true && checkObject.mail === true\n            ? targetSubmit.disabled = false\n            : targetSubmit.disabled = true\n        }\n      })\n    })\n  }\n}\n\nexport default ActivateSubmit\n",
    "import ActivateSubmit from '../module/ActivateSubmit'\n\n// 定数\nconst LOAD_EVENT = 'DOMContentLoaded'\n\nwindow.addEventListener(LOAD_EVENT, () => {\n  new ActivateSubmit()\n})\n"
  ]
}