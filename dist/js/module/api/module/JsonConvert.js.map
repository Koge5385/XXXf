{
  "version": 3,
  "sources": [
    "../../../../../node_modules/browser-pack/_prelude.js",
    "../../../../../src/js/module/api/module/JsonConvert.js"
  ],
  "names": [
    "r",
    "e",
    "n",
    "t",
    "o",
    "i",
    "f",
    "c",
    "require",
    "u",
    "a",
    "Error",
    "code",
    "p",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "JsonConvert",
    "_classCallCheck",
    "this",
    "targetFormClass",
    "_createClass",
    "key",
    "value",
    "FormData",
    "document",
    "querySelector",
    "forEach",
    "JSON",
    "stringify",
    "default"
  ],
  "mappings": "CAAA,WAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,GAAA,MAAAJ,QAAAiB,GAAA,SAAAT,QAAAU,OAAAJ,6bCIMK,YAAA,WAKJ,QAAAlB,GAAAE,GAA6BiB,gBAAAC,KAAApB,GAC3BoB,KAAAC,gBAAAnB,EAAA,MAAAoB,cAAAtB,IAAAuB,IAAA,gBAAAC,MAAA,WAOA,GAAMxB,KAMN,OALiB,IAAAyB,UAAaC,SAAAC,cAAuBP,KAArDC,kBACAO,QAAiB,SAAA1B,EAAAH,GACfC,EAAAD,GAAAG,IAEkB2B,KAAAC,UAApB9B,OAAAA,IAAAa,SAAAkB,QAKWb",
  "file": "JsonConvert.js",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/**\n * @class JsonConvert\n * @desc 対象のフォームデータを取得してJSONを返す\n */\nclass JsonConvert {\n  /**\n   * @constructor\n   * @param {string} targetFormClass 対象フォームのクラス名\n   */\n  constructor(targetFormClass) {\n    this.targetFormClass = targetFormClass\n  }\n\n  /**\n   * @desc FormDataのオブジェクトをJSONに変換・返却する\n   */\n  objectConvert() {\n    const jsonObject = {}\n    const formData = new FormData(document.querySelector(this.targetFormClass))\n    formData.forEach((value, key) => {\n      jsonObject[key] = value\n    })\n    const convertData = JSON.stringify(jsonObject)\n    return convertData\n  }\n}\n\nexport default JsonConvert\n"
  ]
}