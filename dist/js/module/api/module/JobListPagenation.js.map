{
  "version": 3,
  "sources": [
    "../../../../../node_modules/browser-pack/_prelude.js",
    "../../../../../src/js/module/api/module/JobListPagenation.js"
  ],
  "names": [
    "r",
    "e",
    "n",
    "t",
    "o",
    "i",
    "f",
    "c",
    "require",
    "u",
    "a",
    "Error",
    "code",
    "p",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "PAGENATION_TARGET_CLASS",
    "JobListPagenation",
    "_classCallCheck",
    "this",
    "getElement",
    "setParam",
    "createPagenation",
    "_createClass",
    "key",
    "value",
    "pagenationTarget",
    "document",
    "querySelector",
    "maxPageNumber",
    "Math",
    "ceil",
    "activeNumber",
    "pageNumberArray",
    "Array",
    "from",
    "map",
    "forEach",
    "createElement",
    "className",
    "innerHTML",
    "innerText",
    "classList",
    "add",
    "remove",
    "appendChild",
    "holdParam",
    "URLSearchParams",
    "window",
    "location",
    "search",
    "querySelectorAll",
    "prototype",
    "slice",
    "addEventListener",
    "set",
    "default"
  ],
  "mappings": "CAAA,WAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,GAAA,MAAAJ,QAAAiB,GAAA,SAAAT,QAAAU,OAAAJ,6bCCMK,wBAAN,8BAMMC,kBAAA,WAMJ,QAAAnB,GAAAS,EAAAP,GAA0BkB,gBAAAC,KAAArB,GACxBqB,KAAAC,aACAD,KAAAE,SAAAd,EAAAP,GACAmB,KAAAG,mBAAA,MAAAC,cAAAzB,IAAA0B,IAAA,aAAAC,MAAA,WAOAN,KAAAO,iBAAwBC,SAAAC,cAAxBZ,4BAAAQ,IAAA,WAAAC,MAAA,SAQO3B,EAAOS,GACdY,KAAAU,cAAqBC,KAAAC,KAAUjC,EAA/B,IACAqB,KAAAa,aAAoBF,KAAAC,KAAUxB,EAA9B,IACAY,KAAAc,gBAAuBC,MAAAC,KAAW,GAAAD,OAAUf,KAArBU,gBAAAO,IAA8C,SAAAtC,EAAAS,GAAA,MAAAA,QAAAiB,IAAA,mBAAAC,MAAA,WAMpD,GAAA3B,GAAAqB,IACjBA,MAAAc,gBAAAI,QAA6B,SAAA9B,GAE3B,GAAMP,GAAA,4GAAA,GAAgIO,EAAhI,MAA8IA,EAA9I,GAAN,YACMR,EAAiB4B,SAAAW,cAAvB,KACAvC,GAAAwC,UAAA,0BACAxC,EAAAyC,UAAAxC,CAGA,IAAME,GAAoByB,SAAAW,cAA1B,KACApC,GAAAuC,UAAA,IACAvC,EAAAqC,UAAA,0BACArC,EAAAwC,UAAAC,IAAA,gCAGIpC,IAAST,EAAbkC,cAAgCjC,EAAA2C,UAAAC,IAAA,aAC5BpC,IAAST,EAAAkC,aAAT,GAAkCzB,IAAST,EAAAkC,aAA3C,GAAoEzB,IAAST,EAAAkC,aAA7E,GAAsGzB,IAAST,EAAAkC,aAA/G,GAAwIzB,IAAST,EAAAkC,aAAjJ,GAA0KzB,IAAST,EAAAkC,aAAvL,GAA8MjC,EAAA2C,UAAAC,IAAA,WAG1M7C,EAAAmC,gBAAApB,QAAJ,IACEd,EAAA2C,UAAAE,OAAA,WACA9C,EAAA4B,iBAAAmB,YAAA9C,IAEED,EAAAmC,gBAAApB,OAAA,GAAmCf,EAAAkC,cAAvC,IACE,IAAIzB,IACFR,EAAA2C,UAAAE,OAAA,WACA9C,EAAA4B,iBAAAmB,YAAA9C,IAEE,IAAAQ,GAAcT,EAAAkC,aAAlB,IACE9B,EAAAwC,UAAAC,IAAA,WACA7C,EAAA4B,iBAAAmB,YAAA3C,IAEEJ,EAAAkC,cAAA,GAA0BzB,GAA9B,GACER,EAAA2C,UAAAE,OAAA,WAEErC,GAAQT,EAAAkC,aAAR,GAAiCzB,GAAQT,EAAAkC,aAA7C,GAAoElC,EAAA4B,iBAAAmB,YAAA9C,GAChEQ,IAAST,EAAA+B,cAAT,GAAmC/B,EAAAkC,aAAoBlC,EAAA+B,cAA3D,GAAmF/B,EAAA4B,iBAAAmB,YAAA3C,GAC/EK,IAAST,EAAA+B,cAAb,GAAqC/B,EAAA4B,iBAAAmB,YAAA9C,IAEnCD,EAAAmC,gBAAApB,OAAA,GAAmCf,EAAAkC,cAAqBlC,EAAA+B,cAA5D,IACE,IAAItB,GAAYT,EAAA4B,iBAAAmB,YAAA9C,GACZ,IAAAQ,GAAcT,EAAAkC,aAAlB,GAAyClC,EAAA4B,iBAAAmB,YAAA3C,GACrCK,GAAQT,EAAAkC,aAAR,GAAiCzB,GAAQT,EAAAkC,aAA7C,GAAoElC,EAAA4B,iBAAAmB,YAAA9C,GAChED,EAAAkC,cAAqBlC,EAAA+B,cAArB,GAA+CtB,GAAQT,EAAA+B,cAA3D,GACE9B,EAAA2C,UAAAE,OAAA,WAEErC,IAAST,EAAA+B,cAAT,GAAmC/B,EAAAkC,aAAoBlC,EAAA+B,cAA3D,IACE3B,EAAAwC,UAAAC,IAAA,WACA7C,EAAA4B,iBAAAmB,YAAA3C,IAEEK,IAAST,EAAA+B,cAAb,IACE9B,EAAA2C,UAAAE,OAAA,WACA9C,EAAA4B,iBAAAmB,YAAA9C,KAGAD,EAAAmC,gBAAApB,OAAA,GAAmCf,EAAAkC,aAAnC,GAA4DlC,EAAAkC,aAAoBlC,EAAA+B,cAApF,IACE,IAAItB,IACFT,EAAA4B,iBAAAmB,YAAA9C,GACAD,EAAA4B,iBAAAmB,YAAA3C,IAEEK,GAAQT,EAAAkC,aAAR,GAAiCzB,GAAQT,EAAAkC,aAA7C,GAAoElC,EAAA4B,iBAAAmB,YAAA9C,GAChEQ,IAAST,EAAA+B,cAAb,IACE/B,EAAA4B,iBAAAmB,YAAA3C,GACAJ,EAAA4B,iBAAAmB,YAAA9C,OAINoB,KAAA2B,eAAAtB,IAAA,YAAAC,MAAA,WAOA,GAAM3B,GAAS,GAAAiD,iBAAoBC,OAAAC,SAAnCC,QACM3C,EAAiBoB,SAAAwB,iBAAvB,kCACwBjB,OAAAkB,UAAAC,MAAAzC,KAAAL,EAAxB,GACA8B,QAAwB,SAAA9B,GACtBA,EAAA+C,iBAAA,QAA+B,WAC7BxD,EAAAyD,IAAA,QAAoBhD,EAApBkB,OACAE,SAAAsB,SAAAC,OAAApD,UAAAA,IAAAa,SAAA6C,QAMOvC",
  "file": "JobListPagenation.js",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "// 定数\nconst PAGENATION_TARGET_CLASS = '.js-async-pagenation-target'\n\n/**\n * @class JobListPagenation\n * @desc 求人一覧のページネーション作成\n */\nclass JobListPagenation {\n  /**\n   * @constructor\n   * @param {Number} total APIレスポンス「data.attributes.total」のデータ\n   * @param {Number} start APIレスポンス「data.attributes.start」のデータ\n   */\n  constructor(total, start) {\n    this.getElement()\n    this.setParam(total, start)\n    this.createPagenation()\n  }\n\n  /**\n   * @desc 対象となる親要素の取得\n   */\n  getElement() {\n    this.pagenationTarget = document.querySelector(PAGENATION_TARGET_CLASS)\n  }\n\n  /**\n   * @desc 引数（データ）からページ数と現在のページ数をセットし、ページ分の要素を持った配列を作成\n   * @param {Number} total APIレスポンス「data.attributes.total」のデータ\n   * @param {Number} start APIレスポンス「data.attributes.start」のデータ\n   */\n  setParam(total, start) {\n    this.maxPageNumber = Math.ceil(total / 10)\n    this.activeNumber = Math.ceil(start / 10)\n    this.pageNumberArray = Array.from(new Array(this.maxPageNumber)).map((v, i) => i)\n  }\n\n  /**\n   * @desc ページネーションDOMの生成\n   */\n  createPagenation() {\n    this.pageNumberArray.forEach(elem => {\n      // ページネーションの要素生成\n      const pagenationElement = `<button type=\"button\" class=\"jobListPagenation__link js-async-pagenationItem-target\" name=\"start\" value=\"${elem * 10}\">${elem + 1}</button>`\n      const pagenationItem = document.createElement('li')\n      pagenationItem.className = 'jobListPagenation__item'\n      pagenationItem.innerHTML = pagenationElement\n\n      // ページネーションの省略用の要素生成\n      const pagenationDotItem = document.createElement('li')\n      pagenationDotItem.innerText = '…'\n      pagenationDotItem.className = 'jobListPagenation__item'\n      pagenationDotItem.classList.add('jobListPagenation__item--dot')\n\n      // アクティブページの判別とSPで非表示要素にクラス追加\n      if (elem === this.activeNumber) pagenationItem.classList.add('is-active')\n      if (elem === this.activeNumber + 2 || elem === this.activeNumber + 3 || elem === this.activeNumber + 4 || elem === this.activeNumber - 2 || elem === this.activeNumber - 3 || elem === this.activeNumber - 4) pagenationItem.classList.add('pc-view')\n\n      // 現在のページ数に応じて要素の出し分け\n      if (this.pageNumberArray.length <= 5){\n        pagenationItem.classList.remove('pc-view')\n        this.pagenationTarget.appendChild(pagenationItem)\n      }\n      if (this.pageNumberArray.length > 5 && this.activeNumber <= 5) {\n        if (elem === 0) {\n          pagenationItem.classList.remove('pc-view')\n          this.pagenationTarget.appendChild(pagenationItem)\n        }\n        if (elem === 1 && this.activeNumber > 2) {\n          pagenationDotItem.classList.add('sp-view')\n          this.pagenationTarget.appendChild(pagenationDotItem)\n        }\n        if (this.activeNumber <= 2 && elem <= 3) {\n          pagenationItem.classList.remove('pc-view')\n        }\n        if (elem <= this.activeNumber + 4 && elem >= this.activeNumber - 4) this.pagenationTarget.appendChild(pagenationItem)\n        if (elem === this.maxPageNumber - 1 && this.activeNumber < this.maxPageNumber - 6) this.pagenationTarget.appendChild(pagenationDotItem)\n        if (elem === this.maxPageNumber - 1) this.pagenationTarget.appendChild(pagenationItem)\n      }\n      if (this.pageNumberArray.length > 5 && this.activeNumber >= this.maxPageNumber - 5){\n        if (elem === 0) this.pagenationTarget.appendChild(pagenationItem)\n        if (elem === 0 && this.activeNumber > 5) this.pagenationTarget.appendChild(pagenationDotItem)\n        if (elem <= this.activeNumber + 4 && elem >= this.activeNumber - 4) this.pagenationTarget.appendChild(pagenationItem)\n        if (this.activeNumber >= this.maxPageNumber - 3 && elem >= this.maxPageNumber - 4) {\n          pagenationItem.classList.remove('pc-view')\n        }\n        if (elem === this.maxPageNumber - 1 && this.activeNumber < this.maxPageNumber - 3) {\n          pagenationDotItem.classList.add('sp-view')\n          this.pagenationTarget.appendChild(pagenationDotItem)\n        }\n        if (elem === this.maxPageNumber - 1) {\n          pagenationItem.classList.remove('pc-view')\n          this.pagenationTarget.appendChild(pagenationItem)\n        }\n      }\n      if (this.pageNumberArray.length > 5 && this.activeNumber > 5 && this.activeNumber < this.maxPageNumber - 5){\n        if (elem === 0) {\n          this.pagenationTarget.appendChild(pagenationItem)\n          this.pagenationTarget.appendChild(pagenationDotItem)\n        }\n        if (elem <= this.activeNumber + 4 && elem >= this.activeNumber - 4) this.pagenationTarget.appendChild(pagenationItem)\n        if (elem === this.maxPageNumber - 1) {\n          this.pagenationTarget.appendChild(pagenationDotItem)\n          this.pagenationTarget.appendChild(pagenationItem)\n        }\n      }\n    })\n    this.holdParam()\n  }\n\n  /**\n   * @desc ページネーションクリック時、パラメーターを維持する処理\n   */\n  holdParam() {\n    const params = new URLSearchParams(window.location.search)\n    const pagenationNode = document.querySelectorAll('.js-async-pagenationItem-target')\n    const pagenationArray = Array.prototype.slice.call(pagenationNode, 0)\n    pagenationArray.forEach(elem => {\n      elem.addEventListener('click', () => {\n        params.set('start', elem.value)\n        document.location.search = params\n      })\n    })\n  }\n}\n\nexport default JobListPagenation\n"
  ]
}